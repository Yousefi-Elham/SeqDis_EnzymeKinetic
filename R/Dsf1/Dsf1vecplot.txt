max.iter <- 500

norm.sum.crit.ds <- c(   0.007281181 ,0.003189629 ,0.005042035 ,0.006670153 ,0.007899121 ,0.008644026 ,0.009497799 ,0.010456070 ,0.011222789 ,0.012337519 ,0.013306958
                         ,0.013895933 ,0.014510135 ,0.015678708 ,0.016015325 ,0.016835422 ,0.017449768 ,0.018132616 ,0.019097909 ,0.019657561 ,0.020254593 ,0.020567973
                         ,0.021132499 ,0.021496174 ,0.021969334 ,0.022623672 ,0.023119435 ,0.023650435 ,0.023985324 ,0.024426558 ,0.024752389 ,0.025131032 ,0.025487522
                         ,0.025814456 ,0.026228110 ,0.026624322 ,0.027068345 ,0.027328764 ,0.027600516 ,0.027851063 ,0.028129429 ,0.028474038 ,0.028781803 ,0.029036708
                         ,0.029420842 ,0.029613053 ,0.030002092 ,0.030137543 ,0.030424231 ,0.030766767 ,0.030825187 ,0.031173228 ,0.031354990 ,0.031608388 ,0.031820127
                         ,0.032009263 ,0.032238612 ,0.032492082 ,0.032739045 ,0.033094041 ,0.033346380 ,0.033484351 ,0.033537174 ,0.033765025 ,0.034010486 ,0.034221101
                         ,0.034407848 ,0.034543165 ,0.034645589 ,0.034819788 ,0.034957996 ,0.035173610 ,0.035419930 ,0.035601705 ,0.035858162 ,0.036022916 ,0.036262166
                         ,0.036410567 ,0.036350278 ,0.036503952 ,0.036659207 ,0.036814854 ,0.037000685 ,0.037165075 ,0.037248999 ,0.037373681 ,0.037341151 ,0.037497620
                         ,0.037636453 ,0.037819410 ,0.037850388 ,0.037996330 ,0.038110162 ,0.038219039 ,0.038397757 ,0.038504670 ,0.038636333 ,0.038696258 ,0.038808840
                         ,0.038935303 ,0.039045167 ,0.039106783 ,0.039334525 ,0.039445761 ,0.039615066 ,0.039712520 ,0.039809154 ,0.039862522 ,0.039961517 ,0.040096721
                         ,0.040182038 ,0.040282464 ,0.040598547 ,0.040711731 ,0.040816844 ,0.040922595 ,0.041018955 ,0.041055187 ,0.041062444 ,0.041117202 ,0.041197932
                         ,0.041533670 ,0.041587733 ,0.041746067 ,0.041820004 ,0.041952619 ,0.042057385 ,0.042138883 ,0.042162841 ,0.042129036 ,0.042156559 ,0.042227811
                         ,0.042312614 ,0.042518988 ,0.042595201 ,0.042669386 ,0.042791432 ,0.043079313 ,0.043155603 ,0.043278443 ,0.043325679 ,0.043396444 ,0.043451954
                         ,0.043526610 ,0.043608233 ,0.043669091 ,0.043616514 ,0.043697277 ,0.043761919 ,0.043787717 ,0.043930745 ,0.043987027 ,0.044053946 ,0.044140885
                         ,0.044069331 ,0.044056544 ,0.044119991 ,0.044190570 ,0.044254980 ,0.044316205 ,0.044296811 ,0.044392182 ,0.044445524 ,0.044558761 ,0.044640176
                         ,0.044729193 ,0.044788404 ,0.044817499 ,0.044834950 ,0.044898584 ,0.044918258 ,0.045087521 ,0.045101957 ,0.045159865 ,0.045204617 ,0.045299956
                         ,0.045383866 ,0.045441841 ,0.045547280 ,0.045699931 ,0.045745091 ,0.045803009 ,0.045807414 ,0.045853543 ,0.045944602 ,0.046008956 ,0.046105468
                         ,0.046146260 ,0.045992772 ,0.046103356 ,0.046139527 ,0.046178494 ,0.046213999 ,0.046326507 ,0.046366950 ,0.046401448 ,0.046653806 ,0.046695824
                         ,0.046753677 ,0.046745552 ,0.046792094 ,0.046786623 ,0.046792269 ,0.046798394 ,0.046839872 ,0.046761901 ,0.046818181 ,0.046854925 ,0.046902536
                         ,0.046917164 ,0.047002187 ,0.047037484 ,0.047089483 ,0.047157761 ,0.047158002 ,0.047201758 ,0.047273411 ,0.047268129 ,0.047302669 ,0.047300410
                         ,0.047327884 ,0.047246356 ,0.047214247 ,0.047249059 ,0.047244880 ,0.047325925 ,0.047362669 ,0.047433727 ,0.047516188 ,0.047555781 ,0.047678991
                         ,0.047702962 ,0.047775491 ,0.047803412 ,0.047811139 ,0.047780238 ,0.047811739 ,0.047842040 ,0.047889795 ,0.047918944 ,0.047949169 ,0.047972896
                         ,0.048002293 ,0.048027434 ,0.048040678 ,0.047995149 ,0.048152780 ,0.048187248 ,0.048237572 ,0.048260598 ,0.048293933 ,0.048355659 ,0.048393530
                         ,0.048397570 ,0.048422259 ,0.048322512 ,0.048284171 ,0.048285990 ,0.048318895 ,0.048314592 ,0.048286846 ,0.048310363 ,0.048126654 ,0.048214366
                         ,0.048220025 ,0.048268392 ,0.048292678 ,0.048340609 ,0.048393505 ,0.048417898 ,0.048399832 ,0.048283522 ,0.048277631 ,0.048263056 ,0.048285697
                         ,0.048293400 ,0.048317258 ,0.048355809 ,0.048367821 ,0.048341380 ,0.048367525 ,0.048373900 ,0.048398399 ,0.048447543 ,0.048470327 ,0.048478910
                         ,0.048496245 ,0.048513849 ,0.048501667 ,0.048541330 ,0.048563545 ,0.048581610 ,0.048591022 ,0.048617272 ,0.048635597 ,0.048644577 ,0.048666974
                         ,0.048744259 ,0.048711992 ,0.048741307 ,0.048781970 ,0.048806598 ,0.048773832 ,0.048795451 ,0.048831277 ,0.048820879 ,0.048749830 ,0.048809332
                         ,0.048830774 ,0.048830629 ,0.048850970 ,0.048871924 ,0.048869971 ,0.048878866 ,0.048846977 ,0.048867409 ,0.048933175 ,0.048948395 ,0.048970144
                         ,0.049006664 ,0.049017528 ,0.049037894 ,0.049050950 ,0.049136712 ,0.049155649 ,0.049174745 ,0.049148205 ,0.049151101 ,0.049169523 ,0.049154889
                         ,0.049165638 ,0.049186219 ,0.049205309 ,0.049223059 ,0.049235272 ,0.049254279 ,0.049276050 ,0.049276554 ,0.049295061 ,0.049313951 ,0.049354993
                         ,0.049373111 ,0.049407912 ,0.049443561 ,0.049421082 ,0.049438581 ,0.049454579 ,0.049456776 ,0.049472413 ,0.049533908 ,0.049546067 ,0.049558756
                         ,0.049576688 ,0.049608007 ,0.049629259 ,0.049647118 ,0.049622873 ,0.049679711 ,0.049788126 ,0.049805652 ,0.049787545 ,0.049804583 ,0.049775534
                         ,0.049793079 ,0.049861524 ,0.049876550 ,0.049901881 ,0.049718971 ,0.049701105 ,0.049718085 ,0.049730875 ,0.049747603 ,0.049762567 ,0.049769336
                         ,0.049816665 ,0.049697540 ,0.049712457 ,0.049729306 ,0.049798758 ,0.049814126 ,0.049815403 ,0.049851086 ,0.049851877 ,0.049864940 ,0.049886359
                         ,0.049889041 ,0.049912749 ,0.049925723 ,0.049971450 ,0.049991987 ,0.050007251 ,0.050002568 ,0.049859994 ,0.049872280 ,0.049884633 ,0.049925696
                         ,0.049963946 ,0.049979230 ,0.049945262 ,0.049983591 ,0.050010861 ,0.050002848 ,0.050017064 ,0.050019356 ,0.050030604 ,0.050044458 ,0.050049446
                         ,0.050066148 ,0.050076181 ,0.050118744 ,0.050059370 ,0.050070734 ,0.050084524 ,0.050086435 ,0.050091890 ,0.050106031 ,0.050174685 ,0.050294927
                         ,0.050317235 ,0.050330530 ,0.050360968 ,0.050371840 ,0.050385786 ,0.050430689 ,0.050444473 ,0.050463074 ,0.050479171 ,0.050567559 ,0.050580233
                         ,0.050554482 ,0.050567324 ,0.050592248 ,0.050604958 ,0.050668726 ,0.050683037 ,0.050694695 ,0.050623179 ,0.050656310 ,0.050665054 ,0.050679137
                         ,0.050671033 ,0.050690877 ,0.050700859 ,0.050685344 ,0.050655800 ,0.050641297 ,0.050651360 ,0.050672464 ,0.050665352 ,0.050677914 ,0.050700148
                         ,0.050719530 ,0.050731947 ,0.050730552 ,0.050766845 ,0.050749871 ,0.050761005 ,0.050771772 ,0.050765878 ,0.050778678 ,0.050788476 ,0.050820974
                         ,0.050862221 ,0.050888086 ,0.050897913 ,0.050901178 ,0.050909123 ,0.050918153 ,0.050935040 ,0.050957032 ,0.050967046 ,0.050931789 ,0.050942275
                         ,0.050963869 ,0.050976354 ,0.050990415 ,0.051011793 ,0.051020929 ,0.051029940 ,0.051045909 ,0.051093940 ,0.051104828 ,0.051110643 ,0.051128177
                         ,0.051140764 ,0.051177164 ,0.051167612 ,0.051181021 ,0.051186524 ,0.051144048 ,0.051148426 ,0.051176581 ,0.051192700 ,0.051211886 ,0.051219318
                         ,0.051224961 ,0.051225444 ,0.051274412 ,0.051284859 ,0.051278560)

max(norm.sum.crit.ds)
max(norm.sum.crit.ds)/13

plot(seq(1:max.iter),norm.sum.crit.ds , type = "p",ylim=c(0,0.06),xlab="iter",ylab=bquote ( paste("Norm.Criterion ", Ds)),pch=16,col="blue")
abline(h=max(norm.sum.crit.ds),lty=2,col="red")

plot(seq(1:max.iter),norm.sum.crit.ds/13 , type = "p",ylim=c(0,0.3),xlab="iter",ylab="Norm.Criterion Ds",pch=16,col="blue")
abline(h=median(norm.sum.crit.ds/13),lty=2,col="red")

quantile(norm.sum.crit.ds)
per0.5 <- quantile(norm.sum.crit.ds)[3]-quantile(norm.sum.crit.ds)[1]
per0.5 / (max(norm.sum.crit.ds)-min(norm.sum.crit.ds))

#compute
which(norm.sum.crit.ds/13 >= max(norm.sum.crit.ds/13)/2)[1]

which(norm.sum.crit.ds >= 3*norm.sum.crit.ds[1])[1]
length(which(norm.sum.crit.ds >= 3*norm.sum.crit.ds[1]))
boxplot(norm.sum.crit.ds)

quanDs <- round(quantile(norm.sum.crit.ds, probs = c(0.25,0.5,0.75,0.9,0.95)), digits=4)
quanDs
#25%        50%        75%        90%        95% 
#0.04191947 0.04821720 0.04980777 0.05070022 0.05097706 

#round
#25%    50%    75%    90%    95% 
#0.0419 0.0482 0.0498 0.0507 0.0510 

earlyiterdsup <- numeric(length(quanDs))
for(i in 1:length(quanDs)){
  earlyiterdsup[i] <- which(norm.sum.crit.ds >= quanDs[i])[1]
}
earlyiterdsup
earlyiterdsup
#[1] 126 249 365 443 476

######################################
earlyiterdsupf1
#[1] 126 249 365 443 476

earlyitertf1
#[1] 118 126 126 155 178

earlyiterdeltaf1
#[1] 126 176 199 451 469