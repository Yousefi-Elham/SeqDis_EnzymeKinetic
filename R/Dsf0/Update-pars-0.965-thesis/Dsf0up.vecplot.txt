max.iter <- 500

norm.sum.crit.ds <- c(  0.7531476 ,1.0918640 ,1.3454651 ,1.2033139 ,1.3946134 ,1.9512432 ,2.0424023 ,2.0338341 ,2.1239585 ,1.9590657 ,2.4001051 ,2.3533790 ,2.4274838 ,2.3732321
                        ,2.3532552 ,2.3799862 ,2.4159897 ,2.4521553 ,2.5079235 ,2.4886490 ,2.5971208 ,2.5879971 ,2.8240870 ,2.8865674 ,2.8740590 ,2.8579784 ,2.8799819 ,2.8925421
                        ,2.8984097 ,3.1351717 ,3.0922234 ,3.0924773 ,3.0989653 ,3.0950632 ,3.0847953 ,3.0961955 ,3.3483061 ,3.3539553 ,3.3332833 ,3.3710729 ,3.3710186 ,3.3672927
                        ,3.3724887 ,3.3590734 ,3.5639980 ,3.5517154 ,3.5370321 ,3.5080749 ,3.5037635 ,3.4726573 ,3.4349872 ,3.6148560 ,3.6168043 ,3.6212302 ,3.6209311 ,3.6137820
                        ,3.5905352 ,3.5804789 ,3.5620567 ,3.5876509 ,3.7019737 ,3.7067782 ,3.6996587 ,3.7055577 ,3.6888898 ,3.6944155 ,3.6775187 ,3.6838338 ,3.6725472 ,3.6754872
                        ,3.6793025 ,3.6824651 ,3.6591723 ,3.7388857 ,3.7566422 ,3.7541697 ,3.7590202 ,3.7421426 ,3.7302160 ,3.7266421 ,3.7282301 ,3.7421714 ,3.7336284 ,3.7362481
                        ,3.7262675 ,3.7109602 ,3.7004355 ,3.6909448 ,3.7544622 ,3.7643321 ,3.7485846 ,3.7428073 ,3.7442688 ,3.7403702 ,3.7423448 ,3.7510012 ,3.8152705 ,3.8205696
                        ,3.8215689 ,3.8263248 ,3.8239121 ,3.8174119 ,3.8045411 ,3.8333958 ,3.8457456 ,3.8423790 ,3.8522211 ,3.8436361 ,3.8371330 ,3.8366197 ,3.7911630 ,3.7908960
                        ,3.7747546 ,3.7740632 ,3.7771426 ,3.7732559 ,3.7770684 ,3.7501432 ,3.7594201 ,3.7531019 ,3.7556740 ,3.7391593 ,3.7322251 ,3.7209935 ,3.7148870 ,3.7976599
                        ,3.7975289 ,3.7978798 ,3.7898246 ,3.7910763 ,3.7808659 ,3.7601785 ,3.7616996 ,3.7438358 ,3.7444576 ,3.7496144 ,3.7407185 ,3.7493121 ,3.7461845 ,3.7373167
                        ,3.7432263 ,3.7371827 ,3.7366472 ,3.7372263 ,3.7275799 ,3.7245030 ,3.7262932 ,3.7255186 ,3.7248357 ,3.7161293 ,3.7050601 ,3.6930101 ,3.6904867 ,3.7538701
                        ,3.7544245 ,3.7815722 ,3.7785683 ,3.7754350 ,3.7755583 ,3.7765512 ,3.7653927 ,3.8032434 ,3.8046058 ,3.7987039 ,3.8024865 ,3.7971777 ,3.7958594 ,3.7968613
                        ,3.7898917 ,3.7769002 ,3.7716921 ,3.7632934 ,3.7535343 ,3.7575908 ,3.7546785 ,3.7474227 ,3.8037582 ,3.8112676 ,3.8029819 ,3.8060590 ,3.8117001 ,3.8115058
                        ,3.8020664 ,3.7945103 ,3.7881107 ,3.7904852 ,3.7837341 ,3.7809332 ,3.7720843 ,3.8218568 ,3.8209757 ,3.8086849 ,3.8067653 ,3.7982885 ,3.7908257 ,3.7899808
                        ,3.7774133 ,3.7709315 ,3.7922449 ,3.8000022 ,3.7988851 ,3.8023982 ,3.7946920 ,3.7893114 ,3.7817480 ,3.7783425 ,3.7781802 ,3.7765484 ,3.7799080 ,3.7756998
                        ,3.7689801 ,3.7616095 ,3.7983534 ,3.7929934 ,3.8075932 ,3.8105916 ,3.8056036 ,3.7970270 ,3.7905347 ,3.7926031 ,3.8057814 ,3.8008956 ,3.8068409 ,3.8013186
                        ,3.7959404 ,3.7894177 ,3.7883375 ,3.8422273 ,3.8357000 ,3.8469590 ,3.8406472 ,3.8365963 ,3.8342839 ,3.8274709 ,3.8303491 ,3.8094154 ,3.8138357 ,3.8115265
                        ,3.8114189 ,3.8099110 ,3.8155606 ,3.8128540 ,3.8231857 ,3.8309464 ,3.8266892 ,3.8186319 ,3.8107748 ,3.8120893 ,3.8085562 ,3.8061989 ,3.8320904 ,3.8272321
                        ,3.8269275 ,3.8377344 ,3.8336571 ,3.8361453 ,3.8282041 ,3.8251742 ,3.8166283 ,3.8099235 ,3.8035803 ,3.8024315 ,3.7944051 ,3.7869494 ,3.7818626 ,3.8024633
                        ,3.7983057 ,3.7918684 ,3.7925810 ,3.7954838 ,3.7900638 ,3.7780755 ,3.7740084 ,3.7807379 ,3.7718477 ,3.7805541 ,3.7797744 ,3.7812474 ,3.7808020 ,3.7781713
                        ,3.7886066 ,3.7857644 ,3.7838937 ,3.7844529 ,3.7849378 ,3.7820436 ,3.7872246 ,3.7760959 ,3.7779058 ,3.7777119 ,3.7773727 ,3.7751660 ,3.7726179 ,3.7668430
                        ,3.7739648 ,3.7834682 ,3.7803459 ,3.7735220 ,3.7710376 ,3.7679628 ,3.7678571 ,3.8001263 ,3.7943321 ,3.7927681 ,3.7943847 ,3.7958621 ,3.7920405 ,3.7938293
                        ,3.7909500 ,3.7800713 ,3.7786466 ,3.7717437 ,3.7665814 ,3.7644842 ,3.7639975 ,3.7753075 ,3.8055317 ,3.8036327 ,3.7962651 ,3.7964272 ,3.7967301 ,3.7961724
                        ,3.7944554 ,3.7901220 ,3.7828706 ,3.7815371 ,3.7846593 ,3.7819729 ,3.7837941 ,3.7888781 ,3.7947898 ,3.7940051 ,3.7948643 ,3.7930477 ,3.7989353 ,3.7998162
                        ,3.7989460 ,3.7946994 ,3.7915770 ,3.8013725 ,3.8013092 ,3.7970052 ,3.7986622 ,3.7989212 ,3.8013110 ,3.7877170 ,3.7863681 ,3.7865813 ,3.7823722 ,3.7791526
                        ,3.7775137 ,3.7754528 ,3.7741956 ,3.7710992 ,3.7725675 ,3.7696864 ,3.7723056 ,3.7745898 ,3.7767272 ,3.7757366 ,3.7521682 ,3.7505672 ,3.7536243 ,3.7527840
                        ,3.7558945 ,3.7510973 ,3.7518490 ,3.7291941 ,3.7312214 ,3.7307160 ,3.7293477 ,3.7280977 ,3.7300984 ,3.7312904 ,3.7267843 ,3.7384691 ,3.7381021 ,3.7372015
                        ,3.7311704 ,3.7300870 ,3.7328989 ,3.7278431 ,3.7255866 ,3.7256265 ,3.7240471 ,3.7219530 ,3.7190051 ,3.7547244 ,3.7561249 ,3.7538619 ,3.7522908 ,3.7497913
                        ,3.7534431 ,3.7564097 ,3.7577965 ,3.7912153 ,3.7880920 ,3.7857962 ,3.7890773 ,3.7898768 ,3.7914843 ,3.7909435 ,3.7900419 ,3.7925325 ,3.7871429 ,3.7861594
                        ,3.7859486 ,3.7850471 ,3.7880164 ,3.7808031 ,3.7775298 ,3.7758952 ,3.7784271 ,3.7785275 ,3.7764212 ,3.7747651 ,3.7687071 ,3.7943143 ,3.7949974 ,3.7933213
                        ,3.7936106 ,3.7923973 ,3.7919678 ,3.7932970 ,3.7942220 ,3.7928172 ,3.7927514 ,3.7890795 ,3.7888114 ,3.7847141 ,3.7834071 ,3.7953051 ,3.7987077 ,3.8016282
                        ,3.8001236 ,3.7982270 ,3.7949572 ,3.7920510 ,3.7969081 ,3.7940562 ,3.7949696 ,3.7944990 ,3.7958070 ,3.7995593 ,3.7974839 ,3.7988512 ,3.8150192 ,3.8156551
                        ,3.8164155 ,3.8143756 ,3.8146216 ,3.8151749 ,3.8148559 ,3.8127951 ,3.8241390 ,3.8257647 ,3.8252208 ,3.8242315 ,3.8218855 ,3.8192084 ,3.8184185 ,3.8214101
                        ,3.8332860 ,3.8311778 ,3.8312197 ,3.8291090 ,3.8285015 ,3.8293982 ,3.8379928 ,3.8347373 ,3.8332165 ,3.8380500 ,3.8372470 ,3.8370439 ,3.8343999 ,3.8324775
                        ,3.8428215 ,3.8429783 ,3.8421203 ,3.8415728 ,3.8418247 ,3.8419610 ,3.8402848 ,3.8488570 ,3.8506426 ,3.8516499 ,3.8542925 ,3.8498392 ,3.8485501 ,3.8489006
                        ,3.8364535 ,3.8385862 ,3.8465434 ,3.8449560 ,3.8463636 ,3.8449599 ,3.8448514 ,3.8451656 ,3.8451679 ,3.8416355)

max(norm.sum.crit.ds)
max(norm.sum.crit.ds)/13

plot(seq(1:max.iter),norm.sum.crit.ds , type = "p",ylim=c(0,4),xlab="iter",ylab=bquote ( paste("Norm.Criterion ", Ds)),pch=16,col="blue",cex.main=2, cex.lab=1.5, cex.axis=1.5)
abline(h=max(norm.sum.crit.ds),lty=2,col="red")

plot(seq(1:max.iter),norm.sum.crit.ds/13 , type = "p",ylim=c(0,0.3),xlab="iter",ylab="Norm.Criterion Ds",pch=16,col="blue")
abline(h=median(norm.sum.crit.ds/13),lty=2,col="red")

quantile(norm.sum.crit.ds)
per0.5 <- quantile(norm.sum.crit.ds)[3]-quantile(norm.sum.crit.ds)[1]
per0.5 / (max(norm.sum.crit.ds)-min(norm.sum.crit.ds))

#compute
which(norm.sum.crit.ds/13 >= max(norm.sum.crit.ds/13)/2)[1]

which(norm.sum.crit.ds >= 3*norm.sum.crit.ds[1])[1]
length(which(norm.sum.crit.ds >= 3*norm.sum.crit.ds[1]))
boxplot(norm.sum.crit.ds)

quanDs <- c(0.25,0.5,0.75,0.9,0.95)
quanDs
#round 25%   50%   75%   90%   95%
#   3.7427 3.7836 3.8021 3.8313 3.8416 


earlyiterdsup <- numeric(length(quanDs))
for(i in 1:length(quanDs)){
  earlyiterdsup[i] <- which(norm.sum.crit.ds >= max(norm.sum.crit.ds)*quanDs[i])[1]
}
earlyiterdsup
#[1]  2  6 28 45 61

#$D_s$&$3.7427$&$ 3.7836$&$ 3.8021$&$ 3.8313$&$ 3.8416$&&$ 75$&$  97$&$  97$&$ 104$&$ 105$\\
###############################################
###############################################
#full quantiles
#earlyiterdsup0.965
#[1]  2  6 28 45 61


#earlyiterdsup0.97
#[1]  3 11 37 79 97

#earlyiterdsup0.98
#[1]  3  12  47 138 214

#earlyiterdsup0.99
#[1] 6  14  39 106 117

earlyitert
#[1]   2   6  16  73 105

earlyiterdelta
#[1]  3   9  26  58  87