#f1
max.iter <- 500

norm.sum.crit.delta <- c( 0.01961160 ,0.04530339 ,0.05358162 ,0.05377346 ,0.05762500 ,0.06166917 ,0.06564164 ,0.07442212 ,0.07901469 ,0.08706669 ,0.08750698 ,0.08455751 ,0.09011595
                          ,0.09022561 ,0.08811063 ,0.09398667 ,0.09804861 ,0.10350639 ,0.10898580 ,0.11257755 ,0.11244214 ,0.12135098 ,0.12548049 ,0.12935864 ,0.13039989 ,0.13552457
                          ,0.13630123 ,0.13956197 ,0.14207801 ,0.14590376 ,0.14157534 ,0.14249179 ,0.14480635 ,0.14760457 ,0.15044292 ,0.15038298 ,0.16288765 ,0.16449109 ,0.16626001
                          ,0.16836731 ,0.17040992 ,0.17185270 ,0.17386355 ,0.17578940 ,0.17341899 ,0.17322647 ,0.17256613 ,0.17000193 ,0.17076969 ,0.17185171 ,0.16890169 ,0.16680025
                          ,0.16761884 ,0.17323965 ,0.17445640 ,0.17569433 ,0.17577923 ,0.17560154 ,0.17776199 ,0.18047319 ,0.17963759 ,0.17986689 ,0.18110381 ,0.18250498 ,0.18425734
                          ,0.18371304 ,0.18476862 ,0.18463062 ,0.18430025 ,0.18452608 ,0.18534782 ,0.18665918 ,0.18850088 ,0.18815375 ,0.19024761 ,0.19088118 ,0.19253245 ,0.19417219
                          ,0.19555756 ,0.19610588 ,0.19595687 ,0.19626342 ,0.19735956 ,0.19831759 ,0.19956964 ,0.20119187 ,0.20079973 ,0.20360539 ,0.20338055 ,0.20507620 ,0.20368004
                          ,0.20388526 ,0.20470757 ,0.20508015 ,0.20632925 ,0.20680107 ,0.20630965 ,0.20591423 ,0.20673274 ,0.20785533 ,0.20832016 ,0.20824396 ,0.20932067 ,0.20954104
                          ,0.21515648 ,0.21542037 ,0.21664448 ,0.21629734 ,0.21703895 ,0.21693969 ,0.21560764 ,0.21571007 ,0.21706481 ,0.21791599 ,0.21783853 ,0.21842790 ,0.21958820
                          ,0.21867519 ,0.21980611 ,0.21956890 ,0.21925871 ,0.22066492 ,0.22042106 ,0.22360673 ,0.22412554 ,0.22555475 ,0.22610182 ,0.22653905 ,0.22606487 ,0.22658866
                          ,0.22594565 ,0.22523238 ,0.22498382 ,0.22535887 ,0.22629104 ,0.22679653 ,0.22621790 ,0.22762412 ,0.22778762 ,0.22728344 ,0.22716046 ,0.22627279 ,0.22640800
                          ,0.22624956 ,0.22726578 ,0.22746579 ,0.22725445 ,0.22762024 ,0.22791094 ,0.22726464 ,0.22631475 ,0.22519212 ,0.22553373 ,0.22664660 ,0.22724724 ,0.22621951
                          ,0.22629958 ,0.22718387 ,0.22772576 ,0.22814809 ,0.22718743 ,0.22691004 ,0.22751272 ,0.22811263 ,0.22748211 ,0.22797799 ,0.22794339 ,0.22774985 ,0.22771941
                          ,0.22882971 ,0.22933306 ,0.23009877 ,0.23088348 ,0.23112958 ,0.23120186 ,0.23190516 ,0.23112927 ,0.23223680 ,0.23298396 ,0.23244160 ,0.23172096 ,0.23157198
                          ,0.23110168 ,0.23048554 ,0.23097461 ,0.23165508 ,0.23121165 ,0.23127294 ,0.23208757 ,0.23288121 ,0.23299570 ,0.23158998 ,0.23184829 ,0.23272566 ,0.23209412
                          ,0.23212542 ,0.23313061 ,0.23372192 ,0.23398774 ,0.23295913 ,0.23299169 ,0.23251746 ,0.23325414 ,0.23291786 ,0.23326939 ,0.23298622 ,0.23335217 ,0.23345262
                          ,0.23422387 ,0.23362065 ,0.23428405 ,0.23491952 ,0.23555974 ,0.23539814 ,0.23503982 ,0.23573372 ,0.23544991 ,0.23458813 ,0.23517567 ,0.23481996 ,0.23495779
                          ,0.23404007 ,0.23477187 ,0.23438502 ,0.23401924 ,0.23430197 ,0.23456293 ,0.23364233 ,0.23428266 ,0.23246435 ,0.23308098 ,0.23305854 ,0.23273129 ,0.23215358
                          ,0.23271013 ,0.23198054 ,0.23270927 ,0.23329370 ,0.23322939 ,0.23336545 ,0.23258445 ,0.23277366 ,0.23287477 ,0.23233497 ,0.23274385 ,0.23189816 ,0.23256473
                          ,0.23229470 ,0.23257728 ,0.23275306 ,0.23314583 ,0.23356653 ,0.23339181 ,0.23291139 ,0.23268140 ,0.23232440 ,0.23304748 ,0.23283176 ,0.23320051 ,0.23257796
                          ,0.23201027 ,0.23214240 ,0.23132050 ,0.23203754 ,0.23249319 ,0.23282923 ,0.23321890 ,0.23383726 ,0.23365077 ,0.23322188 ,0.23282710 ,0.23160601 ,0.23135464
                          ,0.23212373 ,0.23124944 ,0.23116574 ,0.23131048 ,0.23176498 ,0.23194093 ,0.23191346 ,0.23199303 ,0.23190013 ,0.23193456 ,0.23228159 ,0.23216808 ,0.23238591
                          ,0.23238107 ,0.22889996 ,0.22862534 ,0.22858005 ,0.22856253 ,0.22856552 ,0.22878430 ,0.22929832 ,0.22942194 ,0.22925503 ,0.22886162 ,0.22948014 ,0.22968846
                          ,0.22998113 ,0.23013565 ,0.23069767 ,0.23124205 ,0.23136324 ,0.23180268 ,0.23214762 ,0.23191054 ,0.23236484 ,0.23230344 ,0.23189745 ,0.23198675 ,0.23262817
                          ,0.23145441 ,0.23144119 ,0.23165443 ,0.23131251 ,0.23183493 ,0.23186572 ,0.23125061 ,0.23151298 ,0.23142515 ,0.23141527 ,0.23144583 ,0.23121442 ,0.23090418
                          ,0.23109966 ,0.23066615 ,0.23089700 ,0.23133268 ,0.23060809 ,0.23073892 ,0.23087595 ,0.23115308 ,0.23122840 ,0.23123135 ,0.23107119 ,0.23110375 ,0.23077975
                          ,0.23104508 ,0.23108992 ,0.23130791 ,0.23104438 ,0.23146651 ,0.23216485 ,0.23179441 ,0.23226815 ,0.23232471 ,0.23224270 ,0.23261927 ,0.23290494 ,0.23301499
                          ,0.23300464 ,0.23294592 ,0.23317485 ,0.23313948 ,0.23298447 ,0.23260610 ,0.23222898 ,0.23267786 ,0.23276442 ,0.23200424 ,0.23211917 ,0.23168658 ,0.23171560
                          ,0.23226018 ,0.23268693 ,0.23249975 ,0.23208818 ,0.23179623 ,0.23178725 ,0.23181120 ,0.23187727 ,0.23151108 ,0.23139636 ,0.23254415 ,0.23301510 ,0.23315281
                          ,0.23322599 ,0.23270003 ,0.23276642 ,0.23268731 ,0.23227022 ,0.23230208 ,0.23248114 ,0.23258804 ,0.23276768 ,0.23299519 ,0.23236987 ,0.23269388 ,0.23286865
                          ,0.23298529 ,0.23285915 ,0.23339868 ,0.23342263 ,0.23452048 ,0.23503632 ,0.23485639 ,0.23475436 ,0.23454106 ,0.23435991 ,0.23469698 ,0.23468429 ,0.23470981
                          ,0.23463864 ,0.23417678 ,0.23423456 ,0.23419146 ,0.23422579 ,0.23469160 ,0.23399933 ,0.23378920 ,0.23393253 ,0.23396521 ,0.23401552 ,0.23393170 ,0.23406617
                          ,0.23455777 ,0.23418346 ,0.23441955 ,0.23453384 ,0.23442148 ,0.23443946 ,0.23456171 ,0.23487157 ,0.23476529 ,0.23477388 ,0.23492917 ,0.23595907 ,0.23591680
                          ,0.23556572 ,0.23570204 ,0.23584489 ,0.23582544 ,0.23534124 ,0.23543971 ,0.23560236 ,0.23535219 ,0.23557319 ,0.23568251 ,0.23548332 ,0.23532047 ,0.23530572
                          ,0.23559943 ,0.23610244 ,0.23600698 ,0.23577440 ,0.23600393 ,0.23623231 ,0.23646394 ,0.23641179 ,0.23688867 ,0.23710118 ,0.23722018 ,0.23713499 ,0.23707839
                          ,0.23682537 ,0.23691501 ,0.23695770 ,0.23682264 ,0.23707065 ,0.23708551 ,0.23754214 ,0.23746183 ,0.23761491 ,0.23753075 ,0.23742426 ,0.23749615 ,0.23775355
                          ,0.23808232 ,0.23834767 ,0.23843366 ,0.23831752 ,0.23837596 ,0.23849700 ,0.23831766 ,0.23826309 ,0.23838255 ,0.23828705 ,0.23831270 ,0.23839316 ,0.23828391
                          ,0.23819757 ,0.23823782 ,0.23832532 ,0.23864598 ,0.23890110 ,0.23790828 ,0.23747702 ,0.23756610 ,0.23742958 ,0.23806028 ,0.23768829 ,0.23776564 ,0.23773285
                          ,0.23801744 ,0.23798462 ,0.23811550 ,0.23828650 ,0.23816061 ,0.23786191)


plot(seq(1:max.iter),norm.sum.crit.delta  , type = "p",ylim=c(0,0.3),xlab="iter",ylab= bquote ( paste("Norm.Criterion ", delta)) ,pch=16,col="blue")
abline(h=max(norm.sum.crit.delta ),lty=2,col="red")

max(norm.sum.crit.delta)

quantile(norm.sum.crit.delta )
per0.5 <- quantile(norm.sum.crit.delta )[3]-quantile(norm.sum.crit.delta )[1]
per0.5 / (max(norm.sum.crit.delta )-min(norm.sum.crit.delta ))

#compute
which(norm.sum.crit.delta >= max(norm.sum.crit.delta)/2)[1]

which(norm.sum.crit.delta  >= 3*norm.sum.crit.delta [1])[1]
length(which(norm.sum.crit.delta  >= 3*norm.sum.crit.delta [1]))
#boxplot(norm.sum.crit.delta )

quanDelta <-  c(0.25,0.5,0.75,0.9,0.95)
quanDelta


earlyiterdelta <- numeric(length(quanDelta))
for(i in 1:length(quanDelta)){
  earlyiterdelta[i] <- which(norm.sum.crit.delta >= max(norm.sum.crit.delta)*quanDelta[i])[1]
}
earlyiterdelta
#[1]   6  22  60 105 138

Quan <- round(quantile(norm.sum.crit.delta, probs = c(0.25,0.5,0.75,0.9,0.95)), digits=4)
Quan
0.2248 0.2319 0.2339 0.2365 0.2379